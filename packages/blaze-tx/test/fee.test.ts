import {
  hardCodedProtocolParams,
  TxCBOR,
  HexBlob,
  ProtocolParameters,
  Transaction,
  TransactionUnspentOutput,
  Script,
  PlutusV2Script,
} from "@blaze-cardano/core";
import { calculateReferenceScriptFee } from "../src";
const script =
  "59044e59044b0100003232323232323232322253330053232323253330093370e9000180400089919191919191919191919191919191919191919b873232533301e3370e9000000899191919980080080124000444a66604c00420022646660080086054006666444a66604e66e252002002153330273300d0100031337000020042c20026eb8c094004dd6981300080118140011bab3024001301c002148000c070004cc010c8cc00400402c894ccc08400452f5bded8c0264646464a66604466e3d221000021003133026337606ea4008dd3000998030030019bab3023003375c6042004604a00460460020240026466600200201a900011129998108010800899980180198120011991191919191929998128008a999812991991199119198008008019129998178008a5013232533302e300500214a226600800800260660046eb8c0c4004dd618019813000919baf0033374a9001198169ba90014bd701800981200280691815800899b8000648008584018cc028cc8c88c008004c004004894ccc0a400452f5c0266054604e60560026600400460580020020346eacc0a0004c0a0008c098004c078008c08c00800488c8cc00400400c894ccc08400452809919299981019b8f00200514a2266008008002604a0046eb8c08c004cc88c8c8c94ccc078cdc3a4000603a0022646464a66604266e1d2004302000113232320023253330243370e9000000899192999814981600109924c646600200200444a6660560022930991980180198178011bae302d001163758605400260440042c6044002604e002603e0022c604a604c604c603c600e603c002604800260380022c646600200200844a666044002298103d87a800013232533302133712900119991119199119299981419b874800800440084dd698169813001981300119299981319b87480080045300103d87a8000132323300100100222533302c00114c103d87a8000132323232533302d3371e014004266e95200033031375000297ae0133006006003375a605c0066eb8c0b0008c0c0008c0b8004dd5981598120011812000a4000660180060046eacc020c07cc020c07c0080180144cdd2a40006604a00497ae013300400400130260023024001375c603c97bdb18011e581cec291a303b834997b9e4d9d5d661f9dcc1677967cd7893dc4c0d0cc500010746636f6e66696700375c603897bdb1811e581cec291a303b834997b9e4d9d5d661f9dcc1677967cd7893dc4c0d0cc500010746636f6e666967002301f302000100c22323300100100322533301f00114c103d87a800013232323253330203371e00e004266e95200033024374c00297ae0133006006003375660420066eb8c07c008c08c008c084004dd6180e000980e000980d800980d000980c8011bab3017001301700130160023758602800260280046eb0c048004c048004c024014dd7180780098038008b18068009806801180580098018008a4c26cac4600a6ea80048c00cdd5000ab9a5573aaae7955cfaba05742ae881";
const utxo = TransactionUnspentOutput.fromCbor(
  HexBlob(
    "82825820132908513ff3d5a8f31919c291c38b4bd3dbe75428cf6f958ceddc7dd5dbe86d0082581d7177019d836d9a5f1e1225ad0ea8262f99c14c89ae74a750bce29cee931a00566a6c",
  ),
);
const output = utxo.output();
output.setScriptRef(
  Script.newPlutusV2Script(PlutusV2Script.fromCbor(HexBlob(script))),
);
utxo.setOutput(output);

const allInputs = [
  utxo,
  TransactionUnspentOutput.fromCbor(
    HexBlob(
      "8282582026e330110f954a2618714658c844198df88e4fb70bf5c0d69b34fa3f71097e2400a300581d71ec291a303b834997b9e4d9d5d661f9dcc1677967cd7893dc4c0d0cc501821a00129c92a1581cec291a303b834997b9e4d9d5d661f9dcc1677967cd7893dc4c0d0cc5a146636f6e66696701028201d8185824d8799f9f581cfba91f46fc289ad8abe08d07488d8bb5a2c15c41d6903ce70b0ded94ffff",
    ),
  ),
];
function calculateFee(draft_tx: Transaction, params: ProtocolParameters) {
  // Calculate the fee based on the transaction size and minimum fee parameters.
  let minFee =
    params.minFeeConstant +
    (draft_tx.toCbor().length / 2) * params.minFeeCoefficient;

  console.log(params.minFeeReferenceScripts);
  if (params.minFeeReferenceScripts) {
    const refScripts = draft_tx
      .body()
      .referenceInputs()
      ?.values()
      .map((x) =>
        allInputs
          .find((y) => {
            console.log(y.input().toCore(), x.toCore());
            return y.input().toCbor() == x.toCbor();
          })!
          .output()
          .scriptRef(),
      )
      .filter((x) => x !== undefined);
    console.log(refScripts?.length);
    if (refScripts && refScripts.length > 0) {
      minFee += calculateReferenceScriptFee(refScripts, params);
    }
  }
  for (const redeemer of draft_tx.witnessSet().redeemers()!.values()) {
    const exUnits = redeemer.exUnits();

    minFee += params.prices.memory * Number(exUnits.mem());
    minFee += params.prices.steps * Number(exUnits.steps());
  }

  return Math.ceil(minFee);
}

describe("Fee Calculation", () => {
  it("Calculates the fee for a transaction", () => {
    const cbor =
      "84ab008182582014a3f4a3b3fccb8beda49490a473cb2241099cbd42d0e0355b917456771ebce2030182a300583931fba91f46fc289ad8abe08d07488d8bb5a2c15c41d6903ce70b0ded94419971dfb46a7fa611ddf545ee84dabd741454c4837669de8322d71801821a003567e0a1581c77019d836d9a5f1e1225ad0ea8262f99c14c89ae74a750bce29cee93a1581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9a01028201d81859018bd8799f1a29b92700d8799fd8799f581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9affd8799fd8799fd8799f581cf590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6ffffffffd8799f1a481908001a006acfc09f581c40fa2aa67258b4ce7b5782f74831d46a84c59a0ff0c28262fab2172801ffd8799fd8799fd87a9f581cd064690601080228f9cbd54ca70a1590e9498c913b9fc7cbd845e888ffd8799fd8799fd8799f581cf590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6ffffffffd87b9fd8799fd8799fd8799f581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9affd8799fd8799fd8799f581cf590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6ffffffffffffffd8799fd8799fd8799f581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9affd8799fd8799fd8799f581cf590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6ffffffffd87980ffffff825839013429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9af590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6821b000000016285f26ba3581c4523c5e21d409b81c95b45b0aea275b8ea1406e6cafea5583b9f8a5faa4a000de140427564393133014b000de14042756432303937014b000de14042756432313934014b000de14042756432313938014b000de14042756433393235014b000de14042756436323236014b000de14042756437303937014b000de14042756439303037014b000de14042756439303436014b000de1404275643939313201581c90a650d9ba123e2c31fa9c7ae22d1cb9308f6d609603bcfa52497771a351000de140436c617950616e7473313831300151000de140436c617950616e7473323835380151000de140436c617950616e74733932323601581cf0ff48bbb7bbe9d59a40f1ce90e9e9d0ff5002ec48f232b49ca0fb9aa14d000de140636c6179616e64726f01021a0004022c031a0804431b09a1581c77019d836d9a5f1e1225ad0ea8262f99c14c89ae74a750bce29cee93a1581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9a010b58201027145f463f6ab47100b0f17ae15cd0edc4b1da1b10362c4f8a4b220e3b3ff80d8182582014a3f4a3b3fccb8beda49490a473cb2241099cbd42d0e0355b917456771ebce2030e81581c3429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9a10825839013429e8664b09a5a656a3a1cf71cb8d05d00f6f0c44b3cc3d676d4b9af590e6b146db333010ed1c8fa1047b8036e11b4a3c422b4b3d9ac8f6821b0000000162b95935a3581c4523c5e21d409b81c95b45b0aea275b8ea1406e6cafea5583b9f8a5faa4a000de140427564393133014b000de14042756432303937014b000de14042756432313934014b000de14042756432313938014b000de14042756433393235014b000de14042756436323236014b000de14042756437303937014b000de14042756439303037014b000de14042756439303436014b000de1404275643939313201581c90a650d9ba123e2c31fa9c7ae22d1cb9308f6d609603bcfa52497771a351000de140436c617950616e7473313831300151000de140436c617950616e7473323835380151000de140436c617950616e74733932323601581cf0ff48bbb7bbe9d59a40f1ce90e9e9d0ff5002ec48f232b49ca0fb9aa14d000de140636c6179616e64726f01111a000603421282825820132908513ff3d5a8f31919c291c38b4bd3dbe75428cf6f958ceddc7dd5dbe86d0082582026e330110f954a2618714658c844198df88e4fb70bf5c0d69b34fa3f71097e2400a10581840100d87980821a00032e321a0387a80ff5f6";
    const fee = calculateFee(Transaction.fromCbor(TxCBOR(cbor)), {
      ...hardCodedProtocolParams,
      minFeeReferenceScripts: {
        ...hardCodedProtocolParams.minFeeReferenceScripts!,
        base: 44,
      },
    });
    console.log("running fee");
    expect(fee).toBe(267100);
  });
});
